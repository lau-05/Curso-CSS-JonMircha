/* CSS
Regla CSS consta de 2 partes
1-Selector
2-Bloque de declaraciones:
atributo:valor;
atributo-de-mas-de-dos-palabras;otro-valor;
} */
/* @import url("otra-hoja.css"); */
/* Son mala pr√°ctica porque son bloqueantes a la hora de que el navegador lee esta instrucci√≥n */
h1 {
  color: cornflowerblue;
  background-color: azure;
  border-color: cornflowerblue;
  border-style: solid;
  text-align: center;
}

/* SELECTORES BASICOS
-Etiquetas:Son elementos html
-Identificadores:Atributo id-#
-Clases:Atributo class-.
*/
.bg-steelblue {
  background-color: steelblue;
}
.bg-skyblue {
  background-color: skyblue;
}
html {
  scroll-behavior: smooth;
}
.text-20 {
  font-size: 20px;
}
.text-32 {
  font-size: 32px;
}

.text-white {
  color: white;
}
/* Dar estilos con -id- se considera un AntiPatr√≥n */
/*Dar estilos con -clases- nos permite reutilizar nuestro c√≥digo CSS*/
p {
  color: midnightblue;
}
#parrafo-dos {
  background-color: skyblue;
}
.hijos-directos > li {
  background-color: thistle;
}
.hijos-descendientes b {
  background-color: thistle;
}
/*Los selectores de hermanos van a aplicar a los elementos que son hermanos y que esten por debajo del elemento de referencia*/
.hermanos-general ~ li {
  background-color: thistle;
}
.hermanos-adyacentes + li {
  background-color: thistle;
}

/*SELECTORES DE ATRIBUTOS*/
.selectores-atributos a[href] {
  color: rgb(242, 166, 26);
}
.selectores-atributos a[target="_blank"] {
  font-weight: bold;
}
/*El comodin del * aplica el style si contiene el texto en cuestion en cualquier parte*/
.selectores-atributos a[href*="jonmircha"] {
  font-size: 19px;
}
/*El comodin del ^ aplica el style si contiene el texto en cuestion al inicio*/
.selectores-atributos a[href^="http:"] {
  text-decoration: none;
}
/*El comodin del $ aplica el style si contiene el texto en cuestion al final*/
.selectores-atributos a[href$=".com"] {
  background-color: rgb(184, 73, 73);
}
/*El comodin del ~ aplica el style si contiene el texto en cuestion en una lista separada por espacios*/
.selectores-atributos a[class~="cursos"] {
  background-color: rgb(31, 31, 101);
}
/*El comodin del | aplica el style si contiene el texto en cuestion en una lista separada por espacios y que despues del texto en cuestion venga un -*/
.selectores-atributos a[class|="menu"] {
  font-style: italic;
}

/*SELECTOR UNIVERSAL*/
* {
  font-family: sans-serif;
}
/*Y a una sola class*/
.selector-universal * {
  font-size: 19px;
}

/*PSEUDOCLASES:Dan estilos dependiendo del contexto, posicion o estado del elemento*/
/* https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-classes */
.form-pseudoclases *:required {
  border-color: rgb(53, 62, 155);
}
.form-pseudoclases *:valid {
  border-color: rgb(95, 188, 98);
}
.form-pseudoclases *:invalid {
  border-color: rgb(169, 29, 29);
}
.form-pseudoclases *:focus {
  background-color: rgb(237, 250, 255);
}
.form-pseudoclases *:disabled {
  background-color: pink;
}
.menu-pseudoclases a:visited {
  color: rgb(93, 175, 188);
}
.menu-pseudoclases a:hover {
  color: bisque;
}
/*1link-2active-3visited-4hover*/
.p-pseudoclases:hover {
  font-size: 30px;
}
.p-pseudoclases {
  background-color: azure;
}
#temario-css:target {
  background-color: azure;
}
.lista-pseudoclases li:first-child {
  color: rgb(35, 164, 30);
}
.lista-pseudoclases li:last-child {
  color: rgb(125, 36, 172);
}
.lista-pseudoclases li:nth-child(3) {
  color: rgb(50, 24, 197);
}
.lista-pseudoclases li:nth-child(4n) {
  font-size: 20px;
}
.lista-pseudoclases li:nth-child(4n) {
  font-size: 20px;
}
.lista-pseudoclases li:nth-child(even) {
  background-color: rgb(253, 253, 0);
}
.lista-pseudoclases li:nth-child(odd) {
  background-color: rgb(255, 0, 0);
}
.articulo-pseudoclases p:first-of-type {
  background-color: pink;
}
.articulo-pseudoclases p:last-of-type {
  background-color: violet;
}
.articulo-pseudoclases p:nth-of-type(3) {
  background-color: rgb(150, 83, 213);
}
.articulo-pseudoclases *:not(p) {
  background-color: rgb(138, 193, 248);
}

/* https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-elements */
.saga-geminis:before {
  content: "ü§º‚Äç‚ôÇÔ∏è";
}
.saga-geminis::after {
  content: "‚ôä";
}
.saga-precio::before {
  content: "$";
  font-weight: bold;
}
.saga-precio::after {
  font-weight: bold;
  content: "USD";
}
.p-pseudoelementos::first-letter {
  font-weight: bold;
  font-size: 32px;
}
.p-pseudoelementos::first-letter {
  font-weight: bold;
  font-size: 32px;
}
.p-pseudoelementos::selection {
  color: coral;
  background-color: black;
}
.input-pseudoelementos::placeholder {
  color: rgb(51, 74, 168);
}

/*Agrupar Selectores (con la coma ,)*/
.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores input[type="email"],
.form-agrupar-selectores textarea {
  border-color: blue;
  background-color: rgb(214, 223, 240);
  font-weight: 20px;
  display: block;
  width: 300px;
  border-width: 2px;
  border-style: groove;
}

/*Algoritmo CSS: Es la forma en que el navegador aplica los estilos al documento HTML. Es vital entender este concepto para que entiendas como se aplican y en algunas ocasiones se sobreescriben las reglas CSS.
1) La Cascada
2) La Especificidad
3) La Herencia

La CASCADA es el mecanismo en que el navegador aplica los estilos. Y toma en cuenta lo siguiente en este orden:
1) El Origen del C√≥digo:
-El User Agent (los estilos por defecto del navegador)
-Personalizaciones del usuario.
-Los estilos del autor.
2) La Especificidad del Selector
3) Orden de Aparici√≥n

La ESPECIFICIDAD es el peso que tiene un selector cuando hay conflicto de estilos. Se calcula de la siguiente forma:
Etiquetas y pseudoelementos ---------0,0,0,1
Clases, atributos y pseudoclases ----0,0,1,0
Identificadores----------------------0,1,0,0
Estilos en l√≠nea---------------------1,0,0,0
!important------------Rompe la especificidad
*/

blockquote#cita-marco.cita-marco {
  background-color: lightsteelblue;
}
blockquote {
  background-color: burlywood;
}
#cita-marco {
  background-color: lightgreen;
}
blockquote.cita-marco {
  background-color: rgb(147, 31, 10);
}
.cita-marco {
  background-color: cornflowerblue;
}
.cita-marco {
  background-color: mediumaquamarine !important;
}
.cita-marco {
  background-color: rgb(203, 161, 54) !important;
  font-size: 22px;
  border-style: dotted;
  border-color: rgb(173, 46, 46);
}
blockquote#cita-marco {
  background-color: lightsalmon;
}

/*La HERENCIA es la capacidad de un selector de obtener (heredar) los valores de sus ancestros m√°s cercanos, para aplicarla se usa el valor inherit, si queremos evitarla podemos asignar otro valor o inicializar la propiedad en cuesti√≥n con el valor initial*/

.cita-marco cite {
  background-color: pink;
  background-color: inherit;
  font-size: 12px;
  font-size: initial;
  border-style: inherit;
  border-color: inherit;
}
/*https://web.dev/learn/css/inheritance?hl=es#which-properties-are-inheritable*/
